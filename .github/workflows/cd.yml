name: Full CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: yourdockerhubusername/yourapp

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    # -------------------- Frontend Build & Test --------------------
    - name: Install & Build React frontend
      working-directory: ./frontend
      run: |
        npm ci
        npm run build

    - name: React Dependency Audit
      working-directory: ./frontend
      run: npm audit --audit-level=high

    # -------------------- Backend Test --------------------
    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Django tests
      working-directory: ./backend
      run: python manage.py test

    - name: Python Dependency Check
      run: |
        pip install pip-audit
        pip-audit

    # -------------------- Build & Push Docker --------------------
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: docker build -t $IMAGE_NAME:${{ github.sha }} .

    - name: Trivy Image Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: $IMAGE_NAME:${{ github.sha }}
        format: 'table'
        exit-code: 1

    - name: Push Docker Image
      run: docker push $IMAGE_NAME:${{ github.sha }}

    # -------------------- Deploy to Production --------------------
    - name: Deploy to Production
      run: |
        ssh ${{ secrets.PROD_SSH_USER }}@${{ secrets.PROD_SERVER_IP }} "docker pull $IMAGE_NAME:${{ github.sha }} && docker-compose -f /path/to/docker-compose.yml up -d"

    - name: Health Check
      run: curl --fail https://yourdomain.com/health || exit 1
